name: CI

on:
  push:
    branches:
      - main
      - dev
      - integration
  release:
    types: [ published ]

jobs:
  integration:
    name: Build Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ "8.0" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Setup laraboot CLI
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        uses: laraboot-io/github-actions/setup-cli@cli-actions
      - name: Install dependencies
        uses: buildpacks/github-actions/setup-pack@v4.1.0
      - name: Build app
        id: build
        env:
          DEBUG: "*"
          ECR_REGISTRY: ghcr.io/laraboot-io
          PHP_VERSION: ${{ matrix.php }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          AWS_REGION: us-east-1
          AWS_DEFAULT_REGION: us-east-1
        run: |
          chmod -R +x ./scripts
          ./scripts/build.sh

      - name: Upload buildpacks
        uses: actions/upload-artifact@v2
        with:
          name: app-php${{ matrix.php }}
          path: /home/runner/work/laraboot-model-demo/laraboot-model-demo/app.tar.gz

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: integration
    strategy:
      matrix:
        php: [ "8.0" ]
    steps:
      - name: Extract Branch Name
        run: echo "BRANCH=$(echo ${GITHUB_REF##*/})" >> $GITHUB_ENV
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Download buildpacks
        uses: actions/download-artifact@v2
        with:
          name: app-php${{ matrix.php }}
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - run: |
          tar -xzvf app.tar.gz -C . && \
          rm app.tar.gz

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          git init && \
          git add .

          rm -rf ./vendor
          composer install

          touch database/database.sqlite
          DB_CONNECTION=sqlite DB_DATABASE=`pwd`/database/database.sqlite php artisan migrate:refresh --seed --force
          php artisan view:cache

          chmod -R 777 resources/views

          rm .env
          git add . && \
          git commit -m "Migration"

      - name: Preview release
        if: ${{ github.ref == 'refs/heads/main' && matrix.php == '8.0' }}
        uses: ngduc/vercel-deploy-action@master
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        with:
          vercel-cli: vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: '' #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          working-directory: ./
      - name: Release into production
        if: ${{ matrix.php == '7.4' && github.event_name == 'release' }}
        uses: ngduc/vercel-deploy-action@master
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        with:
          vercel-cli: vercel
          vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-args: '--prod' #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}  #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          working-directory: ./
